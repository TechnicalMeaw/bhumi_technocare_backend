"""multiple changes added according to old flow

Revision ID: 793fd1af83bd
Revises: f31d974b88dd
Create Date: 2024-10-22 23:21:31.820129

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '793fd1af83bd'
down_revision: Union[str, None] = 'f31d974b88dd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('area',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('Now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('True'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('Now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('True'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('city',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('area', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('Now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('True'), nullable=False),
    sa.ForeignKeyConstraint(['area'], ['area.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('complaints', sa.Column('firm_id', sa.Integer(), nullable=True))
    op.add_column('complaints', sa.Column('customer_id', sa.Integer(), nullable=False))
    op.add_column('complaints', sa.Column('product_type_id', sa.Integer(), nullable=False))
    op.add_column('complaints', sa.Column('enginner_id', sa.Integer(), nullable=False))
    op.add_column('complaints', sa.Column('due_date', sa.TIMESTAMP(timezone=True), server_default=sa.text('Now()'), nullable=False))
    op.add_column('complaints', sa.Column('service_type', sa.String(), nullable=False))
    op.alter_column('complaints', 'asset_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_foreign_key(None, 'complaints', 'users', ['enginner_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'complaints', 'product_type', ['product_type_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'complaints', 'firms', ['firm_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'complaints', 'customers', ['customer_id'], ['id'], ondelete='CASCADE')
    op.drop_column('complaints', 'contact_no')
    op.add_column('customers', sa.Column('address', sa.String(), nullable=False))
    op.alter_column('customers', 'firm_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('customers', 'depertment',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('firms', sa.Column('city', sa.Integer(), nullable=True))
    op.add_column('firms', sa.Column('pincode', sa.String(), nullable=True))
    op.add_column('firms', sa.Column('gst_no', sa.String(), nullable=True))
    op.alter_column('firms', 'area',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               nullable=True,
               postgresql_using="area::integer")
    op.alter_column('firms', 'contact_person',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('firms', 'contact_no',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_foreign_key(None, 'firms', 'area', ['area'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'firms', 'city', ['city'], ['id'], ondelete='CASCADE')
    op.drop_column('firms', 'depertment')
    op.drop_column('firms', 'billing_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('firms', sa.Column('billing_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('firms', sa.Column('depertment', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'firms', type_='foreignkey')
    op.drop_constraint(None, 'firms', type_='foreignkey')
    op.alter_column('firms', 'contact_no',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('firms', 'contact_person',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('firms', 'area',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.drop_column('firms', 'gst_no')
    op.drop_column('firms', 'pincode')
    op.drop_column('firms', 'city')
    op.alter_column('customers', 'depertment',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('customers', 'firm_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('customers', 'address')
    op.add_column('complaints', sa.Column('contact_no', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'complaints', type_='foreignkey')
    op.drop_constraint(None, 'complaints', type_='foreignkey')
    op.drop_constraint(None, 'complaints', type_='foreignkey')
    op.drop_constraint(None, 'complaints', type_='foreignkey')
    op.alter_column('complaints', 'asset_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('complaints', 'service_type')
    op.drop_column('complaints', 'due_date')
    op.drop_column('complaints', 'enginner_id')
    op.drop_column('complaints', 'product_type_id')
    op.drop_column('complaints', 'customer_id')
    op.drop_column('complaints', 'firm_id')
    op.drop_table('city')
    op.drop_table('product_type')
    op.drop_table('area')
    # ### end Alembic commands ###
